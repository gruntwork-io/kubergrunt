env: &env
  environment:
    GRUNTWORK_INSTALLER_VERSION: v0.0.38
    TERRATEST_LOG_PARSER_VERSION: v0.40.6
    MODULE_CI_VERSION: v0.53.3
    TERRAFORM_VERSION: 1.2.7
    TERRAGRUNT_VERSION: NONE
    PACKER_VERSION: NONE
    GOLANG_VERSION: 1.21.1
    GO111MODULE: auto
    KUBECTL_VERSION: v1.24.8
    MINIKUBE_VERSION: v1.28.0
    CRI_DOCKERD_VERSION: 0.3.0
    KUBECONFIG: /home/circleci/.kube/config
defaults: &defaults
  machine:
    enabled: true
    image: ubuntu-2004:202111-02
  <<: *env
install_gruntwork_utils: &install_gruntwork_utils
  name: install gruntwork utils
  command: |
    curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/main/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
    gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
    gruntwork-install --module-name "kubernetes-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
    gruntwork-install --binary-name "terratest_log_parser" --repo "https://github.com/gruntwork-io/terratest" --tag "${TERRATEST_LOG_PARSER_VERSION}"
    configure-environment-for-gruntwork-module \
      --tfenv-version NONE \
      --terraform-version ${TERRAFORM_VERSION} \
      --terragrunt-version ${TERRAGRUNT_VERSION} \
      --packer-version ${PACKER_VERSION} \
      --go-version ${GOLANG_VERSION} \
      --kubectl-version NONE # We install kubectl in the minikube step
orbs:
  go: circleci/go@1.7.3
version: 2.1
jobs:
  kubergrunt_tests:
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *install_gruntwork_utils
      - run:
          command: |
            cd /home/circleci
            sudo apt-get update
            sudo DEBIAN_FRONTEND=noninteractive apt-get install -y conntrack wget
            setup-minikube --minikube-version "${MINIKUBE_VERSION}" --k8s-version "${KUBECTL_VERSION}" --cri-dockerd-version "${CRI_DOCKERD_VERSION}"
      - run:
          name: run kubergrunt tests
          command: |
            mkdir -p /tmp/logs
            run-go-tests --path . --timeout 10m | tee /tmp/logs/all.log
          no_output_timeout: 900s
      - run:
          command: terratest_log_parser --testlog /tmp/logs/all.log --outputdir /tmp/logs
          when: always
      - store_artifacts:
          path: /tmp/logs
      - store_test_results:
          path: /tmp/logs
  build:
    resource_class: large
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *install_gruntwork_utils
      - run: build-go-binaries --app-name kubergrunt --src-path ./cmd --dest-path ./bin --ld-flags "-X main.VERSION=$CIRCLE_TAG -extldflags '-static'"
      - persist_to_workspace:
          root: .
          paths: bin
  deploy:
    <<: *env
    macos:
      xcode: 14.2.0
    resource_class: macos.x86.medium.gen2
    steps:
      - checkout
      - attach_workspace:
          at: .
      - go/install:
          version: "1.20.5"
      - run:
          name: Install sign-binary-helpers
          command: |
            curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
            gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
            gruntwork-install --module-name "sign-binary-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
      - run:
          name: Compile and sign the binaries
          command: |
            export AC_PASSWORD=${MACOS_AC_PASSWORD}
            export AC_PROVIDER=${MACOS_AC_PROVIDER}
            
            sign-binary --install-macos-sign-dependencies --os mac .gon_amd64.hcl
            sign-binary --os mac .gon_arm64.hcl
            echo "Done signing the binary"

            # Replace the files in bin. These are the same file names generated from .gon_amd64.hcl and .gon_arm64.hcl
            unzip kubergrunt_darwin_amd64.zip
            mv kubergrunt_darwin_amd64 bin/

            unzip kubergrunt_darwin_arm64.zip
            mv kubergrunt_darwin_arm64 bin/
      - run:
          name: Run SHA256SUM
          command: |
            brew install coreutils
            cd bin && sha256sum * > SHA256SUMS
      - run: upload-github-release-assets bin/*
workflows:
  version: 2
  test-and-deploy:
    jobs:
      - kubergrunt_tests:
          filters:
            tags:
              only: /^v.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GITHUB__PAT__gruntwork-ci
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GITHUB__PAT__gruntwork-ci
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GITHUB__PAT__gruntwork-ci
            - APPLE__OSX__code-signing
